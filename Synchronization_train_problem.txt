class Reserve implements Runnable
{
int available = 1;
int wanted;
Reserve(int i)
{
wanted = i;
}
public synchronized void run()
{
System.out.println ("Number of berths available: " +available);
if ( available >= wanted)
{
String name = Thread.currentThread ().getName ();
System.out.println (wanted + " berths alloted to: " +name);
try
{
 System.out.println("wait requesting progress");
Thread.sleep (2000);
available = available - wanted;
} catch (InterruptedException ie){ }
}
else
{ System.out.println ("Sorry, no berths available"); 
}
}
}
public class Synchronization_train_problem {
	public static void main(String args[])
	{
	 System.out.println("topic: Synchronisation ");
	Reserve obj = new Reserve (1);
	Thread t1 = new Thread (obj);
	Thread t2 = new Thread (obj);
	t1.setName ("First Person");
	t2.setName ("Second Person");
	t1.start ();
	t2.start ();

	}
	} 

